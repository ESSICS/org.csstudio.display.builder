# java.util.logging configuration
#
# Read in RuntimeDemo via LogManager

handlers = java.util.logging.ConsoleHandler

# Generally, log everything
.level = ALL

java.util.logging.ConsoleHandler.level = ALL
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter
# 1: date, 2: source, 3: logger, 4: level, 5: message, 6:thrown
# Adding the logger name [%3$s] can be useful to determine which logger to _disable_,
# but otherwise the source is more useful to locate the originating code.
#
#java.util.logging.SimpleFormatter.format=%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS %4$s [%3$s] %5$s%6$s%n
java.util.logging.SimpleFormatter.format=%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS %4$s (%2$s) %5$s%6$s%n

# Throttle messages outside of org.csstudio.display.builder
com.cosylab.epics.caj.level = WARNING
org.csstudio.vtype.pv.level = WARNING

sun.net.www.protocol.http.HttpURLConnection.level = CONFIG

# javafx uses these short logger names instead of package/class
controls.level = WARNING
css.level = WARNING
focus.level = WARNING
input.level = WARNING
layout.level = WARNING

# display.builder packages
# org.csstudio.display.builder.representation.javafx.JFXRepresentation.level = CONFIG
org.csstudio.display.builder.runtime.WidgetRuntime.level = CONFIG